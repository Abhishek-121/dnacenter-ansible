version: 2.1

setup: true

orbs:
  path-filtering: circleci/path-filtering@0.1.6

parameters:
  run-all:
    type: boolean
    default: false
  run-site:
    type: boolean
    default: true
  run-devicecredential:
    type: boolean
    default: false
  run-discovery:
    type: boolean
    default: false
  run-inventory:
    type: boolean
    default: false

jobs:

  pre:
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    machine: true
    resource_class: rukapse/dnacenter-ansible

    environment:
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>
      CIRCLE_PROJECT_BRANCHNAME: << pipeline.trigger_parameters.github_app.branch >>

    steps:
      - run:
          name: Debug information for pre
          command: |
            set -x 
            echo "CIRCLE_PROJECT_REPONAME: $CIRCLE_PROJECT_REPONAME"
            echo "CIRCLE_PROJECT_BRANCHNAME: $CIRCLE_PROJECT_BRANCHNAME"
            env
      - run:
          name: Remove existing directory and collection tarball
          command: |
            set -x 
            rm -rf ${HOME}/repo/$CIRCLE_PROJECT_REPONAME
            rm -rf ${HOME}/.cache/v<< parameters.ansible_cisco_dnac_version >>/

  build: 
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    machine: true
    resource_class: rukapse/dnacenter-ansible
    working_directory: ~/repo 

    environment:
      REPO_URL: << pipeline.trigger_parameters.github_app.repo_url >>
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>
      CIRCLE_PROJECT_BRANCHNAME: << pipeline.trigger_parameters.github_app.branch >>

    steps:
      - run:
          name: Debug information
          command: |
            set -x 
            echo "REPO_URL: $REPO_URL"
            env

      - run:
          name: Custom Git Clone
          command: git clone --depth=1 -b $CIRCLE_PROJECT_BRANCHNAME $REPO_URL

      - run:
          name: Activate Virtual Environment, Install ansible and Build collection tarball
          command: |
            set -x 
            # Activate Virtual Environment
            pyenv local ansible
            export PYENV_ROOT="$HOME/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            export PATH="$PYENV_ROOT/shims/python3:$PATH"
            export PATH="$PYENV_ROOT/shims/python:$PATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python3:$PYTHONPATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python:$PYTHONPATH"

            # Install ansible, dnacentersdk
            pip install --upgrade pip
            pip install jinja2 PyYAML cryptography paramiko
            pip install pyzipper
            pip install ansible 
            pip install dnacentersdk
            ansible --version

            # Change directory to dnacenter-ansible
            cd $HOME/repo/dnacenter-ansible
            
            # Build collection and store resulting tarball in directory $HOME/.cache/v<< parameters.ansible_cisco_dnac_version >>/collection-tarballs
            ansible-galaxy collection build --force --output-path "${HOME}/.cache/v<< parameters.ansible_cisco_dnac_version >>/collection-tarballs"

      - run:
          name: Remove Existing Directory
          command: |
            set -x 
            rm -rf ${HOME}/repo/$CIRCLE_PROJECT_REPONAME


  sanity-tests:
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    machine: true
    resource_class: rukapse/dnacenter-ansible
    working_directory: ~/repo 

    environment:
      REPO_URL: << pipeline.trigger_parameters.github_app.repo_url >>
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>
      CIRCLE_PROJECT_BRANCHNAME: << pipeline.trigger_parameters.github_app.branch >>

    steps:
      - run:
          name: Debug information
          command: |
            set -x 
            echo "REPO_URL: $REPO_URL"
            env

      - run:
          name: Custom Git Clone
          command: git clone --depth=1 -b $CIRCLE_PROJECT_BRANCHNAME $REPO_URL

      - run:
          name: Activate Virtual Environment, Install ansible and Build collection tarball
          command: |
            set -x 
            # Activate Virtual Environment
            pyenv local ansible
            export PYENV_ROOT="$HOME/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            export PATH="$PYENV_ROOT/shims/python3:$PATH"
            export PATH="$PYENV_ROOT/shims/python:$PATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python3:$PYTHONPATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python:$PYTHONPATH"

            export PATH="$HOME/.ansible/collections/:$PATH"
            export PYTHONPATH="$HOME/.ansible/collections/:$PYTHONPATH"

            # Install ansible, dnacentersdk
            pip install --upgrade pip
            pip install jinja2 PyYAML cryptography paramiko 
            pip install pyzipper
            pip install ansible 
            pip install dnacentersdk
            ansible --version

          environment:
            PYTHONPATH: $HOME/.ansible/collections/:$PYTHONPATH

      - run:
          name: Create Roles File header
          command: |
            echo "---" > ccc_roles.yml
            echo "- hosts: dnac_servers" >> ccc_roles.yml
            echo "  gather_facts: no" >> ccc_roles.yml
            echo "  connection: local" >> ccc_roles.yml
            echo "  " >> ccc_roles.yml
            echo "  tasks:" >> ccc_roles.yml
            echo "  " >> ccc_roles.yml
            echo "  vars:" >> ccc_roles.yml
            echo "    debug: false" >> ccc_roles.yml
            echo "  " >> ccc_roles.yml
            echo "  roles:" >> ccc_roles.yml

            cat ccc_roles.yml

      - run:
          name: Adding role
          command: |
            if [[ << pipeline.parameters.run-all >> == true || << pipeline.parameters.run-site >> == true ]]; then
              export MODULENAME="ccc_site_management"
              echo "    - $MODULENAME" >> ccc_roles.yml
            fi
            if [[ << pipeline.parameters.run-all >> == true || << pipeline.parameters.run-devicecredential >> == true ]]; then
              export MODULENAME="ccc_device_credential_management"
              echo "    - $MODULENAME" >> ccc_roles.yml
            fi
            if [[ << pipeline.parameters.run-all >> == true || << pipeline.parameters.run-discovery >> == true ]]; then
              export MODULENAME="ccc_discovery_management"
              echo "    - $MODULENAME" >> ccc_roles.yml
            fi
            if [[ << pipeline.parameters.run-all >> == true || << pipeline.parameters.run-inventory >> == true ]]; then
              export MODULENAME="ccc_inventory_management"
              echo "    - $MODULENAME" >> ccc_roles.yml
            fi

            cat ccc_roles.yml

      - run:
          name: Copy static files
          command: |
            mkdir -p group_vars
            cp ${HOME}/static/group_vars/dnac_servers.yml group_vars/dnac_servers.yml
            cp ${HOME}/static/hosts hosts

      - run:
          name: Install the collection tarball
          command: |
            set -x 
            pyenv versions
            python --version
            ansible --version  

            ansible-galaxy collection install --force ${HOME}/.cache/v<< parameters.ansible_cisco_dnac_version >>/collection-tarballs/*.tar.gz
            
      - run:
          name: Run sanity tests
          command: |
            export ANSIBLE_PERSISTENT_CONNECT_TIMEOUT=1000
            export ANSIBLE_PERSISTENT_COMMAND_TIMEOUT=1000
            export ANSIBLE_ROLES_PATH=/home/circleci/repo/dnacenter-ansible/tests/integration

            ansible-playbook -i hosts ccc_roles.yml -vvvv

      - run:
          name: Remove Existing Directory
          command: |
            set -x 
            rm -rf ${HOME}/repo/$CIRCLE_PROJECT_REPONAME


workflows:
  integration-testing:
    jobs:
      - pre

      - build:
          requires:
            - pre

      - path-filtering/filter:
          requires:
            - build
          base-revision: main
          config-path: .circleci/config.yml
          mapping: |
              plugins/module_utils/.* run-all true

              plugins/modules/site_workflow_manager.py run-site true
              plugins/modules/device_credential_workflow_manager.py run-devicecredential true
              plugins/modules/discovery_workflow_manager.py run-discovery true
              plugins/modules/inventory_workflow_manager.py run-inventory true

              tests/integration/ccc_site_management/.* run-site true
              tests/integration/ccc_device_credential_management/.* run-devicecredential true
              tests/integration/ccc_discovery_management/.* run-discovery true
              tests/integration/ccc_inventory_management/.* run-inventory true
              
      - sanity-tests:
          parameters:
            run-all: << pipeline.parameters.run-all >>
            run-site: << pipeline.parameters.run-site >>
            run-devicecredential: << pipeline.parameters.run-devicecredential >>
            run-discovery: << pipeline.parameters.run-discovery >>
            run-inventory: << pipeline.parameters.run-inventory >>
          requires:
            - path-filtering/filter


  # daily-scheduled:
  #   triggers:
  #     - schedule:
  #         cron: "0 0 * * *"
  #         filters:
  #           branches:
  #             only:
  #               - main
