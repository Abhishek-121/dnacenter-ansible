version: 2.1

jobs:

  pre:
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    machine: true
    resource_class: rukapse/dnacenter-ansible

    environment:
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>

    steps:
      - run:
          name: Debug information
          command: |
            set -x 
            echo "CIRCLE_PROJECT_REPONAME: $CIRCLE_PROJECT_REPONAME"
            env
      - run:
          name: Remove existing directory and collection tarball
          command: |
            set -x 
            rm -rf ${HOME}/repo/$CIRCLE_PROJECT_REPONAME
            rm -rf ${HOME}/.cache/v<< parameters.ansible_cisco_dnac_version >>/

  build: 
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    machine: true
    resource_class: rukapse/dnacenter-ansible
    working_directory: ~/repo 

    environment:
      REPO_URL: << pipeline.trigger_parameters.github_app.repo_url >>
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>

    steps:
      - run:
          name: Debug information
          command: |
            set -x 
            echo "REPO_URL: $REPO_URL"
            env

      - run:
          name: Custom Git Clone
          command: git clone --depth=1 $REPO_URL

      - run:
          name: Activate Virtual Environment, Install ansible and Build collection tarball
          command: |
            set -x 
            # Activate Virtual Environment
            pyenv local ansible
            export PYENV_ROOT="$HOME/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            export PATH="$PYENV_ROOT/shims/python3:$PATH"
            export PATH="$PYENV_ROOT/shims/python:$PATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python3:$PYTHONPATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python:$PYTHONPATH"

            # Install ansible, dnacentersdk
            pip install --upgrade pip
            pip install jinja2 PyYAML cryptography paramiko
            pip install ansible 
            pip install dnacentersdk
            ansible --version

            # Change directory to dnacenter-ansible
            cd $HOME/repo/dnacenter-ansible
            
            # Build collection and store resulting tarball in directory $HOME/.cache/v<< parameters.ansible_cisco_dnac_version >>/collection-tarballs
            ansible-galaxy collection build --force --output-path "${HOME}/.cache/v<< parameters.ansible_cisco_dnac_version >>/collection-tarballs"

      - run:
          name: Remove Existing Directory
          command: |
            set -x 
            rm -rf ${HOME}/repo/$CIRCLE_PROJECT_REPONAME

  sanity-tests:
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    machine: true
    resource_class: rukapse/dnacenter-ansible
    working_directory: ~/repo 

    environment:
      REPO_URL: << pipeline.trigger_parameters.github_app.repo_url >>
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>
      STATIC_GROUP_VARS: << parameters.STATIC_GROUP_VARS
      GROUP_VARS: << parameters.GROUP_VARS >>
      STATIC_HOSTS: << parameters.STATIC_HOSTS
      HOSTS: << parameters.HOSTS >>

    steps:
      - run:
          name: Debug information
          command: |
            set -x 
            echo "REPO_URL: $REPO_URL"
            env

      - run:
          name: Custom Git Clone
          command: git clone --depth=1 $REPO_URL

      - run:
          name: Activate Virtual Environment, Install ansible and Build collection tarball
          command: |
            set -x 
            # Activate Virtual Environment
            pyenv local ansible
            export PYENV_ROOT="$HOME/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            export PATH="$PYENV_ROOT/shims/python3:$PATH"
            export PATH="$PYENV_ROOT/shims/python:$PATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python3:$PYTHONPATH"
            export PYTHONPATH="$PYENV_ROOT/shims/python:$PYTHONPATH"

            export PATH="$HOME/.ansible/collections/:$PATH"
            export PYTHONPATH="$HOME/.ansible/collections/:$PYTHONPATH"

            # Install ansible, dnacentersdk
            pip install --upgrade pip
            pip install jinja2 PyYAML cryptography paramiko
            pip install ansible 
            pip install dnacentersdk
            ansible --version

          environment:
            PYTHONPATH: $HOME/.ansible/collections/:$PYTHONPATH

      - run:
          name: Create Roles File header
          command: |
            echo "---" > ccc_roles.yml
            echo "- hosts: dnac_servers" >> ccc_roles.yml
            echo "  gather_facts: no" >> ccc_roles.yml
            echo "  connection: ansible.netcommon.httpapi" >> ccc_roles.yml
            echo "  " >> ccc_roles.yml
            echo "  tasks:" >> ccc_roles.yml
            echo "  " >> ccc_roles.yml
            echo "  vars:" >> ccc_roles.yml
            echo "    debug: false" >> ccc_roles.yml
            echo "  " >> ccc_roles.yml
            echo "  roles:" >> ccc_roles.yml
            echo "    - ccc_site_management" >> ccc_roles.yml

            cat ccc_roles.yml

      - run:
          name: Copy static files
          command: |
            echo "STATIC_GROUP_VARS: $STATIC_GROUP_VARS"
            echo "GROUP_VARS: $GROUP_VARS"
            echo "STATIC_HOSTS: $STATIC_HOSTS"
            echo "HOSTS: $HOSTS"
            cp ${STATIC_GROUP_VARS} ${GROUP_VARS}
            cp ${STATIC_HOSTS} ${HOSTS}

      - run:
          name: Install the collection tarball
          command: |
            set -x 
            pyenv versions
            python --version
            ansible --version  

            ansible-galaxy collection install --force ${HOME}/.cache/v<< parameters.ansible_cisco_dnac_version >>/collection-tarballs/*.tar.gz
            
      - run:
          name: Run sanity tests
          command: |
            export ANSIBLE_PERSISTENT_CONNECT_TIMEOUT=1000
            export ANSIBLE_PERSISTENT_COMMAND_TIMEOUT=1000
            export ANSIBLE_ROLES_PATH=$INTEGRATION_TESTS
            ansible-playbook -i hosts ccc_roles.yml -vvvv

      - run:
          name: Remove Existing Directory
          command: |
            set -x 
            rm -rf ${HOME}/repo/$CIRCLE_PROJECT_REPONAME


workflows:
  testing:
    jobs:
      - pre
      - build:
          requires:
            - pre
      - sanity-tests:
          requires:
            - build
