version: 2.1

jobs:
  build:
    docker:
      - image: cimg/base:current

    parameters: 
      py_version:
        type: string
        default: "3.8.10"

    working_directory: ~/repo 
    #machine: true

    #environment:
    #  PATH: "$HOME/.pyenv/bin:$PATH"
    #  PYENV_ROOT: "$HOME/.pyenv"

    steps:
      - checkout

      - run:
          name: Install Dependencies and Pyenv
          command: |
            set -x
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends libssl-dev libreadline-dev sqlite3 libsqlite3-dev zlib1g-dev xz-utils
            git clone https://github.com/pyenv/pyenv.git ~/.pyenv
            git clone https://github.com/pyenv/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
            echo -e '#!/bin/bash\n\nexport PATH="$HOME/.pyenv/bin:$PATH"\n'\
                    'eval "$(pyenv init --path)"\n'\
                    'eval "$(pyenv virtualenv-init -)"' > ~/.pyenv_setup.sh
            chmod +x ~/.pyenv_setup.sh

      - run:
          name: Install Python << parameters.py_version >> using pyenv, Create Python << parameters.py_version >>  Virtual Environment, Activate Virtual Environment, Install Dependencies and install Ansible  
          command: |
            set -x
            source ~/.pyenv_setup.sh
            pyenv install << parameters.py_version >>
            pyenv global << parameters.py_version >>
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
            echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
            echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            source ~/.bashrc
            pyenv shell << parameters.py_version >>
            python -m ensurepip --default-pip
            pyenv which pip
            pyenv which python
            pyenv versions
            pyenv version
            cat ~/.pyenv/version
            
            
            



workflows:
  test-build:
    jobs:
      - build