---
  name: Unittests
  
  on:
    workflow_dispatch:
    pull_request:
  
  env:
    NAMESPACE: cisco
    COLLECTION_NAME: dnac
  
  jobs:
    Module-unittest:
      runs-on: ubuntu-22.04
      steps:
        - name: Check out code
          uses: actions/checkout@v4
          with:
            path: repo
            fetch-depth: 0
  
        - name: Create collections directory
          run: mkdir -p ./ansible_collections/${{env.NAMESPACE}}
  
        - name: Move repository
          run: mv ./repo ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
  
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.11'
  
        - name: Install dependencies
          working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
          run: |
            pip install -r test-requirements.txt
            ansible-galaxy collection install -f ansible.netcommon -p ./ansible_collections
  
        - name: Run tests
          working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
          run: |
            base_ref=${{ github.base_ref || github.ref }}
            git fetch origin "$base_ref"  # Fetch the base branch
  
            echo "::group::filtered_files"
            filtered_files=$(git diff --name-only "origin/$base_ref" HEAD | grep '^plugins/modules/.*workflow_manager\.py$' || true)
            echo "$filtered_files"
            echo "::endgroup::"
  
            if [ -z "$filtered_files" ]; then
              echo "No relevant files changed. Skipping tests."
              exit 0
            fi
  
            while IFS= read -r -d $'\0' file; do # Use null delimiter for robust file handling
              unittest_file="tests/unit/modules/dnac/test_$(basename "$file")"
              echo "::group::$unittest_file"
              if [ -f "$unittest_file" ]; then
                echo "Running unittest for: $unittest_file"
                python -m unittest "$unittest_file" || true
              else
                echo "Skipping: No test file found for $file"
              fi
              echo "::endgroup::"
            done < <(echo "$filtered_files" | tr '\n' '\0') # Convert newlines to nulls
            echo "Tests completed successfully."
