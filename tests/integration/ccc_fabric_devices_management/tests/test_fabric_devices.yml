# ---
# - debug: msg="Starting fabric device management test"
# - debug: msg="Role Path {{ role_path }}"

# - block:
#   - name: Load vars and declare dnac vars
#     include_vars:
#       file: "{{ role_path }}/vars/vars_fabric_devices.yml"
#       name: vars_map
#     vars:
#       dnac_login: &dnac_login
#         dnac_host: "{{ dnac_host }}"
#         dnac_username: "{{ dnac_username }}"
#         dnac_password: "{{ dnac_password }}"
#         dnac_verify: "{{ dnac_verify }}"
#         dnac_port: "{{ dnac_port }}"
#         dnac_version: "{{ dnac_version }}"
#         dnac_debug: "{{ dnac_debug }}"
#         dnac_log: true
#         dnac_log_level: DEBUG
#         config_verify: true

#   # - debug:
#   #     msg: "{{ vars_map.site_creation }}"

#   # - debug:
#   #     msg: "{{ vars_map.site_deletion }}"

#   # - debug:
#   #     msg: "{{ vars_map.fabric_site_creation }}"
  
#   # - debug:
#   #     msg: "{{ vars_map.fabric_site_deletion }}"

#   # - debug:
#   #     msg: "{{ vars_map.add_control_node_details }}"

#   # - debug:
#   #     msg: "{{ vars_map.remove_control_node_details }}"

#   # - debug:
#   #     msg: "{{ vars_map.add_control_border_role_details }}"

#   # - debug:
#   #     msg: "{{ vars_map.update_control_border_role_details }}"

#   # - debug:
#   #     msg: "{{ vars_map.remove_control_border_role_details }}"


# #############################################
# #            Pre Tests Clean Up             #
# #############################################

#   - name: Clean up SDA Devices before test
#     block:
#       - name: Clean up the SDA Devices before test
#         cisco.dnac.fabric_transits_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         loop: "{{ vars_map.remove_control_node_details }}"

#   - name: Clean up SDA fabric site before test
#     block:
#       - name: Clean up SDA fabric site before test
#         cisco.dnac.sda_fabric_sites_zones_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         loop: "{{ vars_map.fabric_site_deletion }}"

#   - name: Un-provision the device from the fabric
#     block:
#       - name: Un-provision the device from provision_device config
#         cisco.dnac.provision_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         register: result_provision_device
#         loop: "{{ vars_map.provision_device }}"

#   - name: Delete the device from the site
#     block:
#       - name: Delete the device from delete_device_from_site config
#         cisco.dnac.inventory_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         register: result_delete_device_from_site
#         loop: "{{ vars_map.delete_device_from_site }}"

#   - name: Clean up site before test
#     block:
#       - name: Clean up site before test
#         cisco.dnac.site_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         loop: "{{ vars_map.site_deletion }}"


# #############################################
# #              CREATE A SITE                #
# #############################################

#   - name: Create a site
#     block:
#       - name: Create a site from site_creation config
#         cisco.dnac.site_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#               - "{{ item }}"
#         register: result_site_creation
#         loop: "{{ vars_map.site_creation }}"
#         tags: merged

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_site_creation.results }}"
#   #   when: result_site_creation is defined

# #############################################
# #             DISCOVER A DEVICE             #
# #############################################

#   - name: Discover a device
#     block:
#       - name: Discover a device from discover_device config
#         cisco.dnac.discovery_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#               - "{{ item }}"
#         register: result_discover_device
#         loop: "{{ vars_map.discover_device }}"

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_discover_device.results }}"
#   #   when: result_discover_device is defined

# #############################################
# #            PROVISION A DEVICE             #
# #############################################

#   - name: Provision the device to a site
#     block:
#       - name: Provision the device from provision_device config
#         cisco.dnac.provision_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#               - "{{ item }}"
#         register: result_provision_device
#         loop: "{{ vars_map.provision_device }}"

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_fabric_site_creation.results }}"
#   #   when: result_fabric_site_creation is defined

# #############################################
# #           CREATE A FABRIC SITE            #
# #############################################

#   - name: Create a fabric site
#     block:
#       - name: Create a fabric site from fabric_site_creation config
#         cisco.dnac.sda_fabric_sites_zones_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#           - "{{ item }}"
#         with_list: "{{ vars_map.fabric_site_creation }}"
#         tags: merged
#         register: result_fabric_site_creation

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_fabric_site_creation.results }}"
#   #   when: result_fabric_site_creation is defined

# #############################################
# #           ADD CONTROL PLANE NODE          #
# #############################################

#   - name: Add a Control Plane Node to the fabric
#     block:
#       - name: Add a Control Plane Node from add_control_node_details config
#         cisco.dnac.fabric_devices_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#               - "{{ item }}"
#         register: result_add_control_node_details
#         loop: "{{ vars_map.add_control_node_details }}"
#         tags: created

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_add_control_node_details.results }}"
#   #   when: result_add_control_node_details is defined

#   - name: Assert Control Node Addition
#     assert:
#       that:
#         - item.changed == true
#         - item.response[0].msg[Global/IT/Bld1][204.1.2.3][Validation] == "Success"
#         - "'device details added successfully' in item.response[0].msg[Global/IT/Bld1][204.1.2.3][device_details]"
#     loop: "{{ result_add_control_node_details.results }}"
#     when: result_add_control_node_details is defined

# #############################################
# #         UPDATE CONTROL PLANE NODE         #
# #############################################

#   - name: Update the Control Plane Node in the fabric
#     block:
#       - name: Update a Control Plane Node from update_control_node_details config
#         cisco.dnac.fabric_devices_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#               - "{{ item }}"
#         register: result_update_control_node_details
#         loop: "{{ vars_map.update_control_node_details }}"
#         tags: updated

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_update_control_node_details.results }}"
#   #   when: result_update_control_node_details is defined

#   - name: Assert Control Node Updation
#     assert:
#       that:
#         - item.response[0].msg[Global/IT/Bld1][204.1.2.3][Validation] == "Success"
#         - "'require an update' in item.response[0].msg[Global/IT/Bld1][204.1.2.3][device_details]"
#     loop: "{{ result_update_control_node_details.results }}"
#     when: result_update_control_node_details is defined

# #############################################
# #          REMOVE CONTROL PLANE NODE        #
# #############################################

#   - name: Remove the Control Plane Node from the fabric
#     block:
#       - name: Remove the Control Plane Node from remove_control_node_details config
#         cisco.dnac.fabric_devices_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         register: result_remove_control_node_details
#         loop: "{{ vars_map.remove_control_node_details }}"
#         tags: deleted

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_remove_control_node_details.results }}"
#   #   when: result_remove_control_node_details is defined

#   - name: Assert Control Node Deletion
#     assert:
#       that:
#         - item.changed == true
#         - item.response[0].msg[Global/IT/Bld1][204.1.2.3][Validation] == "Success"
#         - "'device successfully removed' in item.response[0].msg[Global/IT/Bld1][204.1.2.3][device_details]"
#     loop: "{{ result_remove_control_node_details.results }}"
#     when: result_remove_control_node_details is defined

# #############################################
# #       ADD A BORDER AND CONTROL NODE       #
# #############################################

#   - name: Add a Control Plane and Border Node to the fabric
#     block:
#       - name: Add a Control Plane and Border Node from add_control_border_role_details config
#         cisco.dnac.fabric_devices_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#               - "{{ item }}"
#         register: result_add_control_border_role_details
#         loop: "{{ vars_map.add_control_border_role_details }}"
#         tags: created

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_add_control_border_role_details.results }}"
#   #   when: result_add_control_border_role_details is defined

#   - name: Assert Control Node and Border Node creation
#     assert:
#       that:
#         - item.changed == true
#         - item.response[0].msg[Global/IT/Bld1][204.1.2.3][Validation] == "Success"
#         - "'device details added successfully' in item.response[0].msg[Global/IT/Bld1][204.1.2.3][device_details]"
#     loop: "{{ result_add_control_border_role_details.results }}"
#     when: result_add_control_border_role_details is defined

# #############################################
# #     UPDATE A BORDER AND CONTROL NODE      #
# #############################################

#   - name: Update the Control Plane and Border Node to the fabric
#     block:
#       - name: Update the Control Plane and Border Node from update_control_border_role_details config
#         cisco.dnac.fabric_devices_workflow_manager:
#           <<: *dnac_login
#           state: merged
#           config:
#               - "{{ item }}"
#         register: result_update_control_border_role_details
#         loop: "{{ vars_map.update_control_border_role_details }}"
#         tags: updated

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_update_control_border_role_details.results }}"
#   #   when: result_update_control_border_role_details is defined

#   - name: Assert Control Node and Border Node updation
#     assert:
#       that:
#         - item.changed == true
#         - item.response[0].msg[Global/IT/Bld1][204.1.2.3][Validation] == "Success"
#         - "'device details added successfully' in item.response[0].msg[Global/IT/Bld1][204.1.2.3][device_details]"
#     loop: "{{ result_update_control_border_role_details.results }}"
#     when: result_update_control_border_role_details is defined

# #############################################
# #     DELETE A BORDER AND CONTROL NODE      #
# #############################################

#   - name: Delete the Control Plane and Border Node from the fabric
#     block:
#       - name: Delete the Control Plane and Border Node from remove_control_border_role_details config
#         cisco.dnac.fabric_devices_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         register: result_remove_control_border_role_details
#         loop: "{{ vars_map.remove_control_border_role_details }}"
#         tags: deleted

#   # - name: Debug item
#   #   debug:
#   #     var: item
#   #   loop: "{{ result_remove_control_border_role_details.results }}"
#   #   when: result_remove_control_border_role_details is defined

#   - name: Assert Control Node and Border Node deletion
#     assert:
#       that:
#         - item.changed == true
#         - item.response[0].msg[Global/IT/Bld1][204.1.2.3][Validation] == "Success"
#         - "'device successfully removed' in item.response[0].msg[Global/IT/Bld1][204.1.2.3][device_details]"
#     loop: "{{ result_remove_control_border_role_details.results }}"
#     when: result_remove_control_border_role_details is defined

# #############################################
# #            Pre Tests Clean Up             #
# #############################################

#   - name: Un-provision the device from the site
#     block:
#       - name: Un-provision the device from provision_device config
#         cisco.dnac.provision_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         register: result_provision_device
#         loop: "{{ vars_map.provision_device }}"

#   - name: Delete the device from the site
#     block:
#       - name: Delete the device from delete_device_from_site config
#         cisco.dnac.inventory_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         register: result_delete_device_from_site
#         loop: "{{ vars_map.delete_device_from_site }}"

#   - name: Clean up SDA fabric site before test
#     block:
#       - name: Clean up SDA fabric site before test
#         cisco.dnac.sda_fabric_sites_zones_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         loop: "{{ vars_map.fabric_site_deletion }}"

#   - name: Clean up site before test
#     block:
#       - name: Clean up site before test
#         cisco.dnac.site_workflow_manager:
#           <<: *dnac_login
#           state: deleted
#           config:
#               - "{{ item }}"
#         loop: "{{ vars_map.site_deletion }}"
